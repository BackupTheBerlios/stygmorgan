// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "stygmstui.h"
//Copyright(c) 2006 Josep Andreu (holborn)
//License GNU/GPL version 2

void rmgmstye::cb_rmgmstyewin_i(Fl_Double_Window*, void*) {
  pera=2;
rmgmstyewin->hide();
rmgmo->wstyleeditor=0;
rmgmstyewin->clear();
delete rmgmstyewin;
}
void rmgmstye::cb_rmgmstyewin(Fl_Double_Window* o, void* v) {
  ((rmgmstye*)(o->user_data()))->cb_rmgmstyewin_i(o,v);
}

void rmgmstye::cb_Cancel_i(Fl_Button*, void*) {
  rmgmo->bcancel=1;
rmgmstyewin->do_callback();
}
void rmgmstye::cb_Cancel(Fl_Button* o, void* v) {
  ((rmgmstye*)(o->parent()->user_data()))->cb_Cancel_i(o,v);
}

void rmgmstye::cb_Ok_i(Fl_Button*, void*) {
  rmgmo->nStyle.style=(int)Estyle->value();
strcpy(rmgmo->nStyle.Name,EName->value());
rmgmo->nStyle.bpm=(int)StTempo->value();
rmgmstyewin->do_callback();
}
void rmgmstye::cb_Ok(Fl_Button* o, void* v) {
  ((rmgmstye*)(o->parent()->user_data()))->cb_Ok_i(o,v);
}

rmgmstye::rmgmstye(RMGMO *rmgmo_) {
  char temp[128];
static const char *pepe [] ={"stygmorgan"};

int argc=1;
char **argv= (char **) pepe;

Fl::visual(FL_DOUBLE|FL_INDEX);
Fl::visual(FL_RGB);
rmgmo=rmgmo_;
make_window();
rmgmstyewin->position(x,y);
sprintf(temp, "%s - Style Parameters",rmgmo->nStyle.Name);
rmgmstyewin->label(temp);

rmgmstyewin->icon((char *)p);
rmgmstyewin->show(argc,argv);
}

Fl_Double_Window* rmgmstye::make_window() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = rmgmstyewin = new Fl_Double_Window(475, 190);
    w = o;
    o->color(FL_BACKGROUND2_COLOR);
    o->callback((Fl_Callback*)cb_rmgmstyewin, (void*)(this));
    { Fl_Input* o = EName = new Fl_Input(15, 30, 325, 30, "Name");
      o->labelsize(11);
      o->align(FL_ALIGN_TOP_LEFT);
    }
    { Fl_Button* o = new Fl_Button(370, 20, 80, 25, "Cancel");
      o->callback((Fl_Callback*)cb_Cancel);
    }
    { Fl_Button* o = new Fl_Button(370, 55, 80, 25, "Ok");
      o->callback((Fl_Callback*)cb_Ok);
    }
    { Fl_Choice* o = Estyle = new Fl_Choice(15, 85, 325, 25, "Style Type");
      o->down_box(FL_BORDER_BOX);
      o->labelsize(11);
      o->align(FL_ALIGN_TOP_LEFT);
    }
    { Fl_Counter* o = StTempo = new Fl_Counter(15, 135, 105, 25, "Tempo");
      o->box(FL_PLASTIC_DOWN_BOX);
      o->labelsize(11);
      o->minimum(20);
      o->maximum(300);
      o->step(1);
      o->value(120);
      o->align(FL_ALIGN_TOP_LEFT);
    }
    o->end();
  }
  int i;

for (i=0; i<=17; i++)
  Estyle->add(rmgmo->CStyle[i].Nom);

 StTempo->lstep(10);  
  
  EName->value(rmgmo->nStyle.Name);
  Estyle->value(rmgmo->nStyle.style);
  StTempo->value(rmgmo->nStyle.bpm);
  return w;
}
